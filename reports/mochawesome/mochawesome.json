{
  "stats": {
    "suites": 7,
    "tests": 23,
    "passes": 23,
    "pending": 0,
    "failures": 0,
    "start": "2022-07-26T23:48:44.202Z",
    "end": "2022-07-26T23:49:14.032Z",
    "duration": 29830,
    "testsRegistered": 23,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "48adb79b-485b-4ba4-8d55-1f8b34a89b62",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "47e43c3b-31ad-44f1-ab3a-e15bf6fa9bd8",
          "title": "Get ALl Data Entries",
          "fullFile": "/Users/wildankafi/Documents/Work/QA/assignment2_investree/tests/test-case/DataEntriesAll.js",
          "file": "/tests/test-case/DataEntriesAll.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get All",
              "fullTitle": "Get ALl Data Entries Get All",
              "timedOut": false,
              "duration": 2141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\nassert(response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Auth');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.entries[0]).to.have.property('Category'); \nassert (response.body.count).to.equal(1425);",
              "err": {},
              "uuid": "564646b9-1763-4de7-8ddd-722ab3449eb6",
              "parentUUID": "47e43c3b-31ad-44f1-ab3a-e15bf6fa9bd8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "564646b9-1763-4de7-8ddd-722ab3449eb6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2141,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "a37b0a22-3e70-48b4-8617-02df6c48ff97",
          "title": "API Data Entries By Auth",
          "fullFile": "/Users/wildankafi/Documents/Work/QA/assignment2_investree/tests/test-case/DataEntriesByAuth.js",
          "file": "/tests/test-case/DataEntriesByAuth.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Auth With apiKey",
              "fullTitle": "API Data Entries By Auth Auth With apiKey",
              "timedOut": false,
              "duration": 1563,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({Auth : \"apiKey\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Auth');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0].Auth).to.include('apiKey');",
              "err": {},
              "uuid": "2613fb64-4f34-4b1d-a945-6ab5c61ac355",
              "parentUUID": "a37b0a22-3e70-48b4-8617-02df6c48ff97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Auth With apiKeys",
              "fullTitle": "API Data Entries By Auth Auth With apiKeys",
              "timedOut": false,
              "duration": 907,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({Auth : \"apiKeys\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries).is.null;",
              "err": {},
              "uuid": "ef157abe-7894-4f12-9fbf-7d6bca8e08bc",
              "parentUUID": "a37b0a22-3e70-48b4-8617-02df6c48ff97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Auth Null, Show  all data 1425",
              "fullTitle": "API Data Entries By Auth Auth Null, Show  all data 1425",
              "timedOut": false,
              "duration": 1918,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({Auth : \"\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Auth');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.count).to.equal(1425);",
              "err": {},
              "uuid": "03cdd64f-4374-448a-80c0-27521e10d271",
              "parentUUID": "a37b0a22-3e70-48b4-8617-02df6c48ff97",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2613fb64-4f34-4b1d-a945-6ab5c61ac355",
            "ef157abe-7894-4f12-9fbf-7d6bca8e08bc",
            "03cdd64f-4374-448a-80c0-27521e10d271"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4388,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "d629992b-94dc-451f-948b-781ccaf89a67",
          "title": "API Data Entries By Category",
          "fullFile": "/Users/wildankafi/Documents/Work/QA/assignment2_investree/tests/test-case/DataEntriesByCategory.js",
          "file": "/tests/test-case/DataEntriesByCategory.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Category With animals",
              "fullTitle": "API Data Entries By Category Category With animals",
              "timedOut": false,
              "duration": 768,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({Category : \"Animals\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0].Category).to.include('Animals');",
              "err": {},
              "uuid": "7a249fd4-47c4-4103-a886-6be4272de0e4",
              "parentUUID": "d629992b-94dc-451f-948b-781ccaf89a67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Category With Anime",
              "fullTitle": "API Data Entries By Category Category With Anime",
              "timedOut": false,
              "duration": 764,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({Category : \"Anime\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0].Category).to.include('Anime');",
              "err": {},
              "uuid": "819b3bdc-32cc-46b2-8e9b-7b82a57c406c",
              "parentUUID": "d629992b-94dc-451f-948b-781ccaf89a67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Category Null, Show  all data 1425",
              "fullTitle": "API Data Entries By Category Category Null, Show  all data 1425",
              "timedOut": false,
              "duration": 1797,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({Category : \"\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.count).to.equal(1425);",
              "err": {},
              "uuid": "a9a3f167-caa5-4042-8303-76d2906dcc21",
              "parentUUID": "d629992b-94dc-451f-948b-781ccaf89a67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Category With Agustus",
              "fullTitle": "API Data Entries By Category Category With Agustus",
              "timedOut": false,
              "duration": 768,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({Category : \"Agustus\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries).is.null;",
              "err": {},
              "uuid": "318f6a61-8199-4ecd-a2ce-8d173c50ab9c",
              "parentUUID": "d629992b-94dc-451f-948b-781ccaf89a67",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7a249fd4-47c4-4103-a886-6be4272de0e4",
            "819b3bdc-32cc-46b2-8e9b-7b82a57c406c",
            "a9a3f167-caa5-4042-8303-76d2906dcc21",
            "318f6a61-8199-4ecd-a2ce-8d173c50ab9c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4097,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "3a143725-c517-4776-b90f-89af01421cef",
          "title": "API Data Entries By Cors",
          "fullFile": "/Users/wildankafi/Documents/Work/QA/assignment2_investree/tests/test-case/DataEntriesByCors.js",
          "file": "/tests/test-case/DataEntriesByCors.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cors With yes",
              "fullTitle": "API Data Entries By Cors Cors With yes",
              "timedOut": false,
              "duration": 1278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({cors : \"yes\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0].Cors).to.include('yes');",
              "err": {},
              "uuid": "0673bee0-5df1-4cdc-90cc-189652b6ba3a",
              "parentUUID": "3a143725-c517-4776-b90f-89af01421cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cors With No",
              "fullTitle": "API Data Entries By Cors Cors With No",
              "timedOut": false,
              "duration": 1599,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({cors : \"no\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0].Cors).to.include('no');",
              "err": {},
              "uuid": "23a2927a-6747-4013-b1dd-135aecc5d7d6",
              "parentUUID": "3a143725-c517-4776-b90f-89af01421cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cors With unknown",
              "fullTitle": "API Data Entries By Cors Cors With unknown",
              "timedOut": false,
              "duration": 1558,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({cors : \"unknown\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0].Cors).to.include('unknown');",
              "err": {},
              "uuid": "2eb15c32-1fad-42f4-8070-b5fee9fdbdf2",
              "parentUUID": "3a143725-c517-4776-b90f-89af01421cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cors Null, Show  all data 1425",
              "fullTitle": "API Data Entries By Cors Cors Null, Show  all data 1425",
              "timedOut": false,
              "duration": 1792,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({cors : \"\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.count).to.equal(1425);",
              "err": {},
              "uuid": "6e334af7-a28f-4ea7-a42d-3baa7e104410",
              "parentUUID": "3a143725-c517-4776-b90f-89af01421cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cors With Test",
              "fullTitle": "API Data Entries By Cors Cors With Test",
              "timedOut": false,
              "duration": 780,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({cors : \"test\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries).is.null;",
              "err": {},
              "uuid": "409fd35d-5a0f-4a92-b07c-699dede9640b",
              "parentUUID": "3a143725-c517-4776-b90f-89af01421cef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0673bee0-5df1-4cdc-90cc-189652b6ba3a",
            "23a2927a-6747-4013-b1dd-135aecc5d7d6",
            "2eb15c32-1fad-42f4-8070-b5fee9fdbdf2",
            "6e334af7-a28f-4ea7-a42d-3baa7e104410",
            "409fd35d-5a0f-4a92-b07c-699dede9640b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7007,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "cf23cb2d-a4a1-4dac-9495-3f1e4d6d1197",
          "title": "API Data Entries By Description",
          "fullFile": "/Users/wildankafi/Documents/Work/QA/assignment2_investree/tests/test-case/DataEntriesByDescription.js",
          "file": "/tests/test-case/DataEntriesByDescription.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Description With Holidays",
              "fullTitle": "API Data Entries By Description Description With Holidays",
              "timedOut": false,
              "duration": 756,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({Description : \"holidays\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Auth');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0].Description).to.include('holidays');",
              "err": {},
              "uuid": "d711c9fe-2958-4d4b-a6f2-7ca8fef7a33d",
              "parentUUID": "cf23cb2d-a4a1-4dac-9495-3f1e4d6d1197",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Description With Holidays & title Holidays",
              "fullTitle": "API Data Entries By Description Description With Holidays & title Holidays",
              "timedOut": false,
              "duration": 753,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({Description : \"holidays\",title : \"Holidays\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Auth');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0].API).to.include('Holidays');\nassert (response.body.entries[0].Description).to.include('holidays');",
              "err": {},
              "uuid": "8fcd9c9d-1ed1-4177-a4e2-6689e519ab7b",
              "parentUUID": "cf23cb2d-a4a1-4dac-9495-3f1e4d6d1197",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Description Null, Show  all data 1425",
              "fullTitle": "API Data Entries By Description Description Null, Show  all data 1425",
              "timedOut": false,
              "duration": 1758,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({Description : \"\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Auth');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.count).to.equal(1425);\n// assert (response.body.entries[0].API).to.include('Pet');",
              "err": {},
              "uuid": "0caecdb4-ec23-47b6-b930-c491487ef0b6",
              "parentUUID": "cf23cb2d-a4a1-4dac-9495-3f1e4d6d1197",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d711c9fe-2958-4d4b-a6f2-7ca8fef7a33d",
            "8fcd9c9d-1ed1-4177-a4e2-6689e519ab7b",
            "0caecdb4-ec23-47b6-b930-c491487ef0b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3267,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "076cda20-484c-4ec9-a334-0a7e3434afcc",
          "title": "API Data Entries By Https",
          "fullFile": "/Users/wildankafi/Documents/Work/QA/assignment2_investree/tests/test-case/DataEntriesByHttps.js",
          "file": "/tests/test-case/DataEntriesByHttps.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Https With 1",
              "fullTitle": "API Data Entries By Https Https With 1",
              "timedOut": false,
              "duration": 1770,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({HTTPS : 1})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Auth');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0].HTTPS).to.equal(true);",
              "err": {},
              "uuid": "21c4da35-f685-4101-a96a-481be3042b72",
              "parentUUID": "076cda20-484c-4ec9-a334-0a7e3434afcc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Https With 0",
              "fullTitle": "API Data Entries By Https Https With 0",
              "timedOut": false,
              "duration": 1027,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({HTTPS : 0})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Auth');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0].HTTPS).to.equal(false);",
              "err": {},
              "uuid": "a1c25b01-bbaa-4980-bb94-8d238fd75016",
              "parentUUID": "076cda20-484c-4ec9-a334-0a7e3434afcc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Https With a",
              "fullTitle": "API Data Entries By Https Https With a",
              "timedOut": false,
              "duration": 777,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({HTTPS : \"a\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries).is.null;",
              "err": {},
              "uuid": "a45954a5-2837-4898-82e1-cafcd0cc5d18",
              "parentUUID": "076cda20-484c-4ec9-a334-0a7e3434afcc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTTPS Null, Show  all data 1425",
              "fullTitle": "API Data Entries By Https HTTPS Null, Show  all data 1425",
              "timedOut": false,
              "duration": 1848,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({HTTPS : \"\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Auth');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.count).to.equal(1425);",
              "err": {},
              "uuid": "1a308ee3-4b84-43ba-8b16-ee64acf5c268",
              "parentUUID": "076cda20-484c-4ec9-a334-0a7e3434afcc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21c4da35-f685-4101-a96a-481be3042b72",
            "a1c25b01-bbaa-4980-bb94-8d238fd75016",
            "a45954a5-2837-4898-82e1-cafcd0cc5d18",
            "1a308ee3-4b84-43ba-8b16-ee64acf5c268"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5422,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        },
        {
          "uuid": "9827321e-594b-4864-939d-ac625525ebbb",
          "title": "API Data Entries By Title",
          "fullFile": "/Users/wildankafi/Documents/Work/QA/assignment2_investree/tests/test-case/DataEntriesByTitle.js",
          "file": "/tests/test-case/DataEntriesByTitle.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Title With Holidays",
              "fullTitle": "API Data Entries By Title Title With Holidays",
              "timedOut": false,
              "duration": 773,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({title : \"Holidays\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Auth');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0].API).to.include('Holidays');",
              "err": {},
              "uuid": "d23f165c-dc59-48dc-bdf3-a31824b08e7a",
              "parentUUID": "9827321e-594b-4864-939d-ac625525ebbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Title With Pet",
              "fullTitle": "API Data Entries By Title Title With Pet",
              "timedOut": false,
              "duration": 850,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({title : \"Pet\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Auth');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.entries[0]).to.have.property('Category');\nassert (response.body.entries[0].API).to.include('Pet');",
              "err": {},
              "uuid": "a8d67caf-9173-4269-9acc-5a44910b3d96",
              "parentUUID": "9827321e-594b-4864-939d-ac625525ebbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Title Null, Show  all data 1425",
              "fullTitle": "API Data Entries By Title Title Null, Show  all data 1425",
              "timedOut": false,
              "duration": 1848,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await api.getDataEntries()\n.query({title : \"\"})\nassert (response.status).to.equal(200);\nassert (response.body.entries[0]).to.have.property('API');\nassert (response.body.entries[0]).to.have.property('Description');\nassert (response.body.entries[0]).to.have.property('Auth');\nassert (response.body.entries[0]).to.have.property('HTTPS');\nassert (response.body.entries[0]).to.have.property('Cors');\nassert (response.body.entries[0]).to.have.property('Link');\nassert (response.body.count).to.equal(1425);",
              "err": {},
              "uuid": "b0d8bb27-435d-417f-bbb0-6fab3658946c",
              "parentUUID": "9827321e-594b-4864-939d-ac625525ebbb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d23f165c-dc59-48dc-bdf3-a31824b08e7a",
            "a8d67caf-9173-4269-9acc-5a44910b3d96",
            "b0d8bb27-435d-417f-bbb0-6fab3658946c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3471,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 180000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mochawesome/"
      },
      "version": "6.2.0"
    }
  }
}